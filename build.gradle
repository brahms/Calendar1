
subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'eclipse'

    repositories {
        mavenCentral()
    }
    tasks.withType(GroovyCompile) {
        groovyOptions.optimizationOptions.indy = true
    }
    task "create-dirs-java" << {
       sourceSets*.java.srcDirs*.each { it.mkdirs() }
       sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }
    task "create-dirs-groovy" << {
       sourceSets*.groovy.srcDirs*.each { it.mkdirs() }
    }
    dependencies {
        compile  fileTree(dir: '../libs', include: '*.jar')
        compile 'org.apache.commons:commons-lang3:3.1'
        compile 'com.darylteo:vertx-promises:1.1.0-ALPHA1'
        compile 'org.codehaus.groovy:groovy-all:2.1.7:indy'
        compile 'org.slf4j:slf4j-api:1.7.5'
        compile 'ch.qos.logback:logback-classic:1.0.13'
        testCompile group: 'junit', name: 'junit', version: '4.+'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.7'
}

project(':client') {
    apply plugin:'application'
    dependencies {
        compile project(':common')

    }
    mainClassName = "org.brahms5.client.ClientMain"
}

project(':server') {
    apply plugin:'application'
    dependencies {
        compile project(':common')
    }
    mainClassName = "org.brahms5.server.ServerMain"
}
